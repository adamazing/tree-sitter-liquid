name: PR Synchronised

on:
  pull_request:
    types: [ "synchronize" ]
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  run-tree-sitter-tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: v3-${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}

    - name: Install tree-sitter-cli
      run: |
        if ! command -v tree-sitter > /dev/null; then
          cargo install tree-sitter-cli
        fi

    - name: Compile parser
      run: tree-sitter generate

    - name: Run tests
      run: tree-sitter test

  version-checks:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check for change to VERSION file
        run: |
          ! git diff --quiet origin/main -- VERSION

  bindings-config-versions-bump:
    needs: version-checks
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout required files
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Update version
        id: update_version
        run: |
          # Read Semver version from VERSION file
          VERSION=$(<VERSION)
          # Update version in package.json
          sed -i 's/"version": ".*"/"version": "'"$VERSION"'"/' package.json
          # Update version in Cargo.toml
          sed -i 's/version = ".*"/version = "'"$VERSION"'"/' Cargo.toml

      - name: Import bot's GPG key for commit-signing
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.BOT_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.BOT_GPG_PASSPHRASE }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true
      - name: Debugging info
        run: |
          gpg -K
          echo "${{ github.event.pull_request.head.ref }}"
          echo "${{ steps.import-gpg.outputs.fingerprint }}"
          echo "${{ steps.import-gpg.outputs.keyid }}"

      - name: Commit version update
        env:
          GITHUB_TOKEN: ${{ secrets.ADAMBOT_GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: ${{ steps.import-gpg.outputs.name }}
          GIT_AUTHOR_EMAIL: ${{ steps.import-gpg.outputs.email }}
          GIT_COMMITTER_NAME: ${{ steps.import-gpg.outputs.name }}
          GIT_COMMITTER_EMAIL: ${{ steps.import-gpg.outputs.email }}
        run: |
          VERSION=$(<VERSION)

          git remote set-url origin "https://x-access-token:$GITHUB_TOKEN@github.com/${{github.repository}}"
          git add package.json Cargo.toml
          git commit -S -m "Update version in package.json and Cargo.toml to $VERSION" || echo "No version bump needed."
          git push origin HEAD:${{ github.event.pull_request.head.ref }} || echo "No changes to be pushed."

