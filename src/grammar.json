{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "liquid",
  "word": "identifier",
  "rules": {
    "template": {
      "type": "REPEAT",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "directive"
          },
          {
            "type": "SYMBOL",
            "name": "output_directive"
          }
        ]
      }
    },
    "directive": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "{%"
            },
            {
              "type": "STRING",
              "value": "{%-"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "code"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "%}"
            },
            {
              "type": "STRING",
              "value": "-%}"
            }
          ]
        }
      ]
    },
    "output_directive": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "{{"
            },
            {
              "type": "STRING",
              "value": "{{-"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "code"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "}}"
            },
            {
              "type": "STRING",
              "value": "-}}"
            }
          ]
        }
      ]
    },
    "comment": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "{%"
              },
              {
                "type": "PATTERN",
                "value": "\\s#"
              },
              {
                "type": "PATTERN",
                "value": "[^%-]+"
              }
            ]
          }
        ]
      }
    },
    "code": {
      "type": "REPEAT1",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_expression"
          }
        ]
      }
    },
    "control_code": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": ""
        }
      ]
    },
    "_literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "string"
        },
        {
          "type": "SYMBOL",
          "name": "number"
        },
        {
          "type": "SYMBOL",
          "name": "boolean"
        }
      ]
    },
    "string": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "'"
            },
            {
              "type": "PATTERN",
              "value": "[^']*"
            },
            {
              "type": "STRING",
              "value": "'"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "\""
            },
            {
              "type": "PATTERN",
              "value": "[^\"]*"
            },
            {
              "type": "STRING",
              "value": "\""
            }
          ]
        }
      ]
    },
    "number": {
      "type": "PATTERN",
      "value": "-?\\d*\\.?\\d+"
    },
    "boolean": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "true"
        },
        {
          "type": "STRING",
          "value": "false"
        }
      ]
    },
    "_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "include_expression"
        },
        {
          "type": "SYMBOL",
          "name": "render_expression"
        },
        {
          "type": "SYMBOL",
          "name": "selector_expression"
        },
        {
          "type": "SYMBOL",
          "name": "binary_expression"
        },
        {
          "type": "SYMBOL",
          "name": "_literal"
        }
      ]
    },
    "selector_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PREC",
          "value": 1,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "FIELD",
                "name": "operand",
                "content": {
                  "type": "SYMBOL",
                  "name": "identifier"
                }
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "STRING",
                      "value": "."
                    },
                    {
                      "type": "FIELD",
                      "name": "field",
                      "content": {
                        "type": "SYMBOL",
                        "name": "identifier"
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[a-zA-Z_][a-zA-Z0-9]+"
    },
    "binary_operator": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "=="
        },
        {
          "type": "STRING",
          "value": "!="
        },
        {
          "type": "STRING",
          "value": ">"
        },
        {
          "type": "STRING",
          "value": "<"
        },
        {
          "type": "STRING",
          "value": ">="
        },
        {
          "type": "STRING",
          "value": "<="
        },
        {
          "type": "STRING",
          "value": "or"
        },
        {
          "type": "STRING",
          "value": "and"
        }
      ]
    },
    "contains_operator": {
      "type": "STRING",
      "value": "contains"
    },
    "include_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "include",
          "content": {
            "type": "STRING",
            "value": "include"
          }
        },
        {
          "type": "FIELD",
          "name": "included_file",
          "content": {
            "type": "SYMBOL",
            "name": "string"
          }
        }
      ]
    },
    "render_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "render",
          "content": {
            "type": "STRING",
            "value": "render"
          }
        },
        {
          "type": "FIELD",
          "name": "rendered_file",
          "content": {
            "type": "SYMBOL",
            "name": "string"
          }
        }
      ]
    },
    "binary_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PREC_RIGHT",
          "value": 1,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_expression"
              },
              {
                "type": "SYMBOL",
                "name": "binary_operator"
              },
              {
                "type": "SYMBOL",
                "name": "_expression"
              }
            ]
          }
        },
        {
          "type": "PREC_RIGHT",
          "value": 1,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_expression"
              },
              {
                "type": "SYMBOL",
                "name": "contains_operator"
              },
              {
                "type": "SYMBOL",
                "name": "string"
              }
            ]
          }
        }
      ]
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}
